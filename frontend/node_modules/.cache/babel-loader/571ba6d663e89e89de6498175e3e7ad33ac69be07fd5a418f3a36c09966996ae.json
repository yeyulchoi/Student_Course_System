{"ast":null,"code":"/**\n * react-router v7.1.5\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\"use strict\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// dom-export.ts\nvar dom_export_exports = {};\n__export(dom_export_exports, {\n  HydratedRouter: () => HydratedRouter,\n  RouterProvider: () => RouterProvider2\n});\nmodule.exports = __toCommonJS(dom_export_exports);\n\n// lib/dom-export/dom-router-provider.tsx\nvar React10 = __toESM(require(\"react\"));\nvar ReactDOM = __toESM(require(\"react-dom\"));\n\n// lib/router/history.ts\nvar PopStateEventType = \"popstate\";\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window2.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options = {}) {\n  let {\n    window: window2 = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({\n      ...globalHistory.state,\n      idx: index\n    }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    let base = window2.location.origin !== \"null\" ? window2.location.origin : window2.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, `No window.location.(origin|href) available to create URL for href: ${href}`);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n\n// lib/router/utils.ts\nvar immutableRouteKeys = /* @__PURE__ */new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, `Cannot specify children on an index route`);\n    invariant(!manifest[id], `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`);\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties2, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\") {\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`);\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`);\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo2, {\n    paramName,\n    isOptional\n  }, index) => {\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo2[paramName] = void 0;\n    } else {\n      memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo2;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`);\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {}\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`);\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(path)}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = {\n      ...toArg\n    };\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(data2, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, {\n    ...responseInit,\n    headers\n  });\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"];\nvar validMutationMethods = new Set(validMutationMethodsArr);\nvar validRequestMethodsArr = [\"GET\", ...validMutationMethodsArr];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties2, void 0, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  let future = {\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */new Set();\n  let savedScrollPositions = null;\n  let getScrollRestorationKey = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      initialMatchesIsFOW = true;\n      initialMatches = fogOfWar.matches;\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    initialized = true;\n  } else {\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== void 0);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  }\n  let router2;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */new Map(),\n    blockers: /* @__PURE__ */new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */new Set();\n  let fetchControllers = /* @__PURE__ */new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */new Map();\n  let fetchRedirectIds = /* @__PURE__ */new Set();\n  let fetchLoadMatches = /* @__PURE__ */new Map();\n  let activeFetchers = /* @__PURE__ */new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */new Set();\n  let blockerFunctions = /* @__PURE__ */new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(({\n      action: historyAction,\n      location,\n      delta\n    }) => {\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = void 0;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: void 0,\n              reset: void 0,\n              location\n            });\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router2;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach(key => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: unmountedFetchers,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    unmountedFetchers.forEach(key => deleteFetcher(key));\n    mountedFetchers.forEach(key => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, {\n    flushSync: flushSync2\n  } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {} else if (pendingAction === \"POP\" /* Pop */) {} else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState({\n      ...newState,\n      // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }, {\n      viewTransitionOpts,\n      flushSync: flushSync2 === true\n    });\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    pendingRevalidationDfd?.resolve();\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, to, opts?.fromRouteId, opts?.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {} else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync2 = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync: flushSync2\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n    state.matches : matchRoutes(routesToUse, location, basename);\n    let flushSync2 = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync: flushSync2\n      });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync: flushSync2\n      });\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: \"error\" /* error */,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync: flushSync2\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync2 = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync2, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: \"error\" /* error */,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: \"error\" /* error */,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync2, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState({\n          navigation: loadingNavigation,\n          ...(actionData !== void 0 ? {\n            actionData\n          } : {})\n        }, {\n          flushSync: flushSync2\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, initialHydration === true, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        ...getActionDataForCommit(pendingActionResult),\n        ...(updatedFetchers2 ? {\n          fetchers: new Map(state.fetchers)\n        } : {})\n      }, {\n        flushSync: flushSync2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync: flushSync2\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults);\n    if (initialHydration && state.errors) {\n      errors = {\n        ...state.errors,\n        ...errors\n      };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {})\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(void 0, fetcher ? fetcher.data : void 0);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href, opts) {\n    abortFetcher(key);\n    let flushSync2 = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, href, routeId, opts?.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync: flushSync2\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync: flushSync2\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync2, preventScrollReset, submission);\n      return;\n    }\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    await handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync2, preventScrollReset, submission);\n  }\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync2, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync: flushSync2\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync: flushSync2\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync: flushSync2\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync: flushSync2\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(void 0, existingFetcher2 ? existingFetcher2.data : void 0);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(revalidationRequest, redirect2.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(revalidationRequest, redirect2.result, false, {\n        preventScrollReset\n      });\n    }\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, void 0, revalidatingFetchers, fetcherResults);\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync2, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : void 0), {\n      flushSync: flushSync2\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync: flushSync2\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync: flushSync2\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(type, state2, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state2, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2);\n    } catch (e) {\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state2, matches, matchesToLoad, fetchersToLoad, request) {\n    let loaderResultsPromise = callDataStrategy(\"loader\", state2, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state2, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: \"error\" /* error */,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          path: pathname,\n          matches: partialMatches,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties2);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties2, void 0, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2);\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router2 = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router2;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, [name, value]) => `${acc}${name}=${value}\n`, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary = false) {\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      return true;\n    }\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    });\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0) {\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      });\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== void 0;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, `No route found to patch children into: routeId = ${routeId}`);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties2, [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every((aChild, i) => existingRoute.children?.some(bChild => isSameRoute(aChild, bChild)));\n}\nasync function loadLazyRouteModule(route, mapRouteProperties2, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== void 0 &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`);\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  Object.assign(routeToUpdate, routeUpdates);\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided `mapRouteProperties`\n    // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n    // since the logic will differ between frameworks.\n    ...mapRouteProperties2(routeToUpdate),\n    lazy: void 0\n  });\n}\nasync function defaultDataStrategy({\n  matches\n}) {\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties2, manifest) : void 0);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: \"data\" /* data */,\n        result: void 0\n      });\n    };\n    return {\n      ...match,\n      shouldLoad,\n      resolve\n    };\n  });\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {}\n  return results;\n}\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(`You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== void 0 ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (loadRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return {\n            type: \"data\" /* data */,\n            result: void 0\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return {\n      type: \"error\" /* error */,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data2 = null;\n        } else {\n          data2 = await result.json();\n        }\n      } else {\n        data2 = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: \"error\" /* error */,\n        error: e\n      };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.init?.status || 500, void 0, result.data),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return {\n    type: \"data\" /* data */,\n    data: result\n  };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, location);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = void 0;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult);\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (controller && controller.signal.aborted) {\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({\n    ...parsedPath,\n    hash: \"\"\n  });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {}\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, `Failed to save applied view transitions in sessionStorage (${error}).`);\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async val => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n    reject = async error => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/components.tsx\nvar React3 = __toESM(require(\"react\"));\n\n// lib/context.ts\nvar React = __toESM(require(\"react\"));\nvar DataRouterContext = React.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar ViewTransitionContext = React.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React.createContext(/* @__PURE__ */new Map());\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React.createContext(null);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React.createContext(null);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\n\n// lib/hooks.tsx\nvar React2 = __toESM(require(\"react\"));\nvar ENABLE_DEV_WARNINGS = true;\nfunction useInRouterContext() {\n  return React2.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(useInRouterContext(),\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  `useLocation() may be used only in the context of a <Router> component.`);\n  return React2.useContext(LocationContext).location;\n}\nvar OutletContext = React2.createContext(null);\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  invariant(useInRouterContext(),\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  `useRoutes() may be used only in the context of a <Router> component.`);\n  let {\n    navigator: navigator2,\n    static: isStatic\n  } = React2.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React2.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"), `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`);\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase), `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`);\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(parentRoute || matches != null, `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `);\n    warning(matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0, `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`);\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */React2.createElement(LocationContext.Provider, {\n      value: {\n        location: {\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\",\n          ...location\n        },\n        navigationType: \"POP\" /* Pop */\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /* @__PURE__ */React2.createElement(React2.Fragment, null, /* @__PURE__ */React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */React2.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */React2.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */React2.createElement(React2.Fragment, null, /* @__PURE__ */React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */React2.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /* @__PURE__ */React2.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */React2.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React2.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */React2.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /* @__PURE__ */React2.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n};\nfunction RenderedRoute({\n  routeContext,\n  match,\n  children\n}) {\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */React2.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && errors?.[m.route.id] !== void 0);\n    invariant(errorIndex >= 0, `Could not find a matching route for errors on route IDs: ${Object.keys(errors).join(\",\")}`);\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors: errors2\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        children = /* @__PURE__ */React2.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /* @__PURE__ */React2.createElement(RenderedRoute, {\n        match,\n        routeContext: {\n          outlet,\n          matches: matches2,\n          isDataRoute: dataRouterState != null\n        },\n        children\n      });\n    };\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */React2.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches: matches2,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterState(hookName) {\n  let state = React2.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React2.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(thisRoute.route.id, `${hookName} can only be used on routes that contain a unique \"id\"`);\n  return thisRoute.route.id;\n}\nfunction useRouteError() {\n  let error = React2.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return state.errors?.[routeId];\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/components.tsx\nvar ENABLE_DEV_WARNINGS2 = true;\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.element) {\n        warning(false, \"You should not include both `Component` and `element` on your route - `Component` will be used.\");\n      }\n    }\n    Object.assign(updates, {\n      element: React3.createElement(route.Component),\n      Component: void 0\n    });\n  }\n  if (route.HydrateFallback) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.hydrateFallbackElement) {\n        warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\");\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\n      HydrateFallback: void 0\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.errorElement) {\n        warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\");\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React3.createElement(route.ErrorBoundary),\n      ErrorBoundary: void 0\n    });\n  }\n  return updates;\n}\nvar Deferred = class {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n};\nfunction RouterProvider({\n  router: router2,\n  flushSync: reactDomFlushSyncImpl\n}) {\n  let [state, setStateImpl] = React3.useState(router2.state);\n  let [pendingState, setPendingState] = React3.useState();\n  let [vtContext, setVtContext] = React3.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React3.useState();\n  let [transition, setTransition] = React3.useState();\n  let [interruption, setInterruption] = React3.useState();\n  let fetcherData = React3.useRef(/* @__PURE__ */new Map());\n  let setState = React3.useCallback((newState, {\n    deletedFetchers,\n    flushSync: flushSync2,\n    viewTransitionOpts\n  }) => {\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== void 0) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    warnOnce(flushSync2 === false || reactDomFlushSyncImpl != null, 'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.');\n    let isViewTransitionAvailable = router2.window != null && router2.window.document != null && typeof router2.window.document.startViewTransition === \"function\";\n    warnOnce(viewTransitionOpts == null || isViewTransitionAvailable, \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\");\n    if (!viewTransitionOpts || !isViewTransitionAvailable) {\n      if (reactDomFlushSyncImpl && flushSync2) {\n        reactDomFlushSyncImpl(() => setStateImpl(newState));\n      } else {\n        React3.startTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    if (reactDomFlushSyncImpl && flushSync2) {\n      reactDomFlushSyncImpl(() => {\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      let t = router2.window.document.startViewTransition(() => {\n        reactDomFlushSyncImpl(() => setStateImpl(newState));\n      });\n      t.finished.finally(() => {\n        reactDomFlushSyncImpl(() => {\n          setRenderDfd(void 0);\n          setTransition(void 0);\n          setPendingState(void 0);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      reactDomFlushSyncImpl(() => setTransition(t));\n      return;\n    }\n    if (transition) {\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router2.window, reactDomFlushSyncImpl, transition, renderDfd]);\n  React3.useLayoutEffect(() => router2.subscribe(setState), [router2, setState]);\n  React3.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && router2.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition2 = router2.window.document.startViewTransition(async () => {\n        React3.startTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition2.finished.finally(() => {\n        setRenderDfd(void 0);\n        setTransition(void 0);\n        setPendingState(void 0);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition2);\n    }\n  }, [pendingState, renderDfd, router2.window]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  React3.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(void 0);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator2 = React3.useMemo(() => {\n    return {\n      createHref: router2.createHref,\n      encodeLocation: router2.encodeLocation,\n      go: n => router2.navigate(n),\n      push: (to, state2, opts) => router2.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router2.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router2]);\n  let basename = router2.basename || \"/\";\n  let dataRouterContext = React3.useMemo(() => ({\n    router: router2,\n    navigator: navigator2,\n    static: false,\n    basename\n  }), [router2, navigator2, basename]);\n  return /* @__PURE__ */React3.createElement(React3.Fragment, null, /* @__PURE__ */React3.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /* @__PURE__ */React3.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /* @__PURE__ */React3.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /* @__PURE__ */React3.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /* @__PURE__ */React3.createElement(Router, {\n    basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator2\n  }, /* @__PURE__ */React3.createElement(MemoizedDataRoutes, {\n    routes: router2.routes,\n    future: router2.future,\n    state\n  })))))), null);\n}\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\nfunction DataRoutes({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = \"POP\" /* Pop */,\n  navigator: navigator2,\n  static: staticProp = false\n}) {\n  invariant(!useInRouterContext(), `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`);\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React3.useMemo(() => ({\n    basename,\n    navigator: navigator2,\n    static: staticProp,\n    future: {}\n  }), [basename, navigator2, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React3.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  warning(locationContext != null, `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`);\n  if (locationContext == null) {\n    return null;\n  }\n  return /* @__PURE__ */React3.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /* @__PURE__ */React3.createElement(LocationContext.Provider, {\n    children,\n    value: locationContext\n  }));\n}\n\n// lib/dom/ssr/components.tsx\nvar React9 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import(/* @vite-ignore */\n    /* webpackIgnore: true */\n    route.module);\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(`Error loading route module \\`${route.module}\\`, reloading page...`);\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode &&\n    // @ts-expect-error\n    void 0) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {});\n  }\n}\n\n// lib/dom/ssr/links.ts\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...route.css.map(href => ({\n      rel: \"stylesheet\",\n      href\n    })));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  let matchingLinks = styleLinks.filter(link => (!link.media || window.matchMedia(link.media).matches) && !document.querySelector(`link[rel=\"stylesheet\"][href=\"${link.href}\"]`));\n  await Promise.all(matchingLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise(resolve => {\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/dom/ssr/markup.ts\nfunction createHtml(html) {\n  return {\n    __html: html\n  };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar React4 = __toESM(require(\"react\"));\nvar import_turbo_stream = require(\"turbo-stream\");\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = {\n    signal: request.signal\n  };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nfunction getSingleFetchDataStrategy(manifest, routeModules, getRouter) {\n  return async ({\n    request,\n    matches,\n    fetcherKey\n  }) => {\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(request, matches);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(request, matches);\n    }\n    return singleFetchLoaderNavigationStrategy(manifest, routeModules, getRouter(), request, matches);\n  };\n}\nasync function singleFetchActionStrategy(request, matches) {\n  let actionMatch = matches.find(m => m.shouldLoad);\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async handler => {\n    let result2 = await handler(async () => {\n      let url = singleFetchUrl(request.url);\n      let init = await createRequestInit(request);\n      let {\n        data: data2,\n        status\n      } = await fetchAndDecode(url, init);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {\n    return {\n      [actionMatch.route.id]: result\n    };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function singleFetchLoaderNavigationStrategy(manifest, routeModules, router2, request, matches) {\n  let routesParams = /* @__PURE__ */new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = matches.map(() => createDeferred2());\n  let routesLoadedPromise = Promise.all(routeDfds.map(d => d.promise));\n  let singleFetchDfd = createDeferred2();\n  let url = stripIndexParam(singleFetchUrl(request.url));\n  let init = await createRequestInit(request);\n  let results = {};\n  let resolvePromise = Promise.all(matches.map(async (m, i) => m.resolve(async handler => {\n    routeDfds[i].resolve();\n    let manifestRoute = manifest.routes[m.route.id];\n    if (!m.shouldLoad) {\n      if (!router2.state.initialized) {\n        return;\n      }\n      if (m.route.id in router2.state.loaderData && manifestRoute && manifestRoute.hasLoader && routeModules[m.route.id]?.shouldRevalidate) {\n        foundOptOutRoute = true;\n        return;\n      }\n    }\n    if (manifestRoute && manifestRoute.hasClientLoader) {\n      if (manifestRoute.hasLoader) {\n        foundOptOutRoute = true;\n      }\n      try {\n        let result = await fetchSingleLoader(handler, url, init, m.route.id);\n        results[m.route.id] = {\n          type: \"data\",\n          result\n        };\n      } catch (e) {\n        results[m.route.id] = {\n          type: \"error\",\n          result: e\n        };\n      }\n      return;\n    }\n    if (manifestRoute && manifestRoute.hasLoader) {\n      routesParams.add(m.route.id);\n    }\n    try {\n      let result = await handler(async () => {\n        let data2 = await singleFetchDfd.promise;\n        return unwrapSingleFetchResults(data2, m.route.id);\n      });\n      results[m.route.id] = {\n        type: \"data\",\n        result\n      };\n    } catch (e) {\n      results[m.route.id] = {\n        type: \"error\",\n        result: e\n      };\n    }\n  })));\n  await routesLoadedPromise;\n  if ((!router2.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({});\n  } else {\n    try {\n      if (foundOptOutRoute && routesParams.size > 0) {\n        url.searchParams.set(\"_routes\", matches.filter(m => routesParams.has(m.route.id)).map(m => m.route.id).join(\",\"));\n      }\n      let data2 = await fetchAndDecode(url, init);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  return results;\n}\nasync function singleFetchLoaderFetcherStrategy(request, matches) {\n  let fetcherMatch = matches.find(m => m.shouldLoad);\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let result = await fetcherMatch.resolve(async handler => {\n    let url = stripIndexParam(singleFetchUrl(request.url));\n    let init = await createRequestInit(request);\n    return fetchSingleLoader(handler, url, init, fetcherMatch.route.id);\n  });\n  return {\n    [fetcherMatch.route.id]: result\n  };\n}\nfunction fetchSingleLoader(handler, url, init, routeId) {\n  return handler(async () => {\n    let singleLoaderUrl = new URL(url);\n    singleLoaderUrl.searchParams.set(\"_routes\", routeId);\n    let {\n      data: data2\n    } = await fetchAndDecode(singleLoaderUrl, init);\n    return unwrapSingleFetchResults(data2, routeId);\n  });\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl) {\n  let url = typeof reqUrl === \"string\" ? new URL(reqUrl,\n  // This can be called during the SSR flow via PrefetchPageLinksImpl so\n  // don't assume window is available\n  typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = \"_root.data\";\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\n  }\n  return url;\n}\nasync function fetchAndDecode(url, init) {\n  let res = await fetch(url, init);\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  const NO_BODY_STATUS_CODES = /* @__PURE__ */new Set([100, 101, 204, 205]);\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    if (!init.method || init.method === \"GET\") {\n      return {\n        status: res.status,\n        data: {}\n      };\n    } else {\n      return {\n        status: res.status,\n        data: {\n          data: void 0\n        }\n      };\n    }\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    return {\n      status: res.status,\n      data: decoded.value\n    };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global) {\n  return (0, import_turbo_stream.decode)(body, {\n    plugins: [(type, ...rest) => {\n      if (type === \"SanitizedError\") {\n        let [name, message, stack] = rest;\n        let Constructor = Error;\n        if (name && name in global && typeof global[name] === \"function\") {\n          Constructor = global[name];\n        }\n        let error = new Constructor(message);\n        error.stack = stack;\n        return {\n          value: error\n        };\n      }\n      if (type === \"ErrorResponse\") {\n        let [data2, status, statusText] = rest;\n        return {\n          value: new ErrorResponseImpl(status, statusText, data2)\n        };\n      }\n      if (type === \"SingleFetchRedirect\") {\n        return {\n          value: {\n            [SingleFetchRedirectSymbol]: rest[0]\n          }\n        };\n      }\n      if (type === \"SingleFetchClassInstance\") {\n        return {\n          value: rest[0]\n        };\n      }\n      if (type === \"SingleFetchFallback\") {\n        return {\n          value: void 0\n        };\n      }\n    }]\n  });\n}\nfunction unwrapSingleFetchResults(results, routeId) {\n  let redirect2 = results[SingleFetchRedirectSymbol];\n  if (redirect2) {\n    return unwrapSingleFetchResult(redirect2, routeId);\n  }\n  return results[routeId] !== void 0 ? unwrapSingleFetchResult(results[routeId], routeId) : null;\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"error\" in result) {\n    throw result.error;\n  } else if (\"redirect\" in result) {\n    let headers = {};\n    if (result.revalidate) {\n      headers[\"X-Remix-Revalidate\"] = \"yes\";\n    }\n    if (result.reload) {\n      headers[\"X-Remix-Reload-Document\"] = \"yes\";\n    }\n    if (result.replace) {\n      headers[\"X-Remix-Replace\"] = \"yes\";\n    }\n    throw redirect(result.redirect, {\n      status: result.status,\n      headers\n    });\n  } else if (\"data\" in result) {\n    return result.data;\n  } else {\n    throw new Error(`No response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async val => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n    reject = async error => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar React8 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/routes.tsx\nvar React7 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/errorBoundaries.tsx\nvar React5 = __toESM(require(\"react\"));\nvar RemixErrorBoundary = class extends React5.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: props.error || null,\n      location: props.location\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return {\n        error: props.error || null,\n        location: props.location\n      };\n    }\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */React5.createElement(RemixRootDefaultErrorBoundary, {\n        error: this.state.error,\n        isOutsideRemixApp: true\n      });\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */React5.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\n        );\n      `\n    }\n  });\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */React5.createElement(BoundaryShell, {\n      title: \"Unhandled Thrown Response!\"\n    }, /* @__PURE__ */React5.createElement(\"h1\", {\n      style: {\n        fontSize: \"24px\"\n      }\n    }, error.status, \" \", error.statusText), heyDeveloper);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */React5.createElement(BoundaryShell, {\n    title: \"Application Error!\",\n    isOutsideRemixApp\n  }, /* @__PURE__ */React5.createElement(\"h1\", {\n    style: {\n      fontSize: \"24px\"\n    }\n  }, \"Application Error\"), /* @__PURE__ */React5.createElement(\"pre\", {\n    style: {\n      padding: \"2rem\",\n      background: \"hsla(10, 50%, 50%, 0.1)\",\n      color: \"red\",\n      overflow: \"auto\"\n    }\n  }, errorInstance.stack), heyDeveloper);\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let {\n    routeModules\n  } = useFrameworkContext();\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */React5.createElement(\"html\", {\n    lang: \"en\"\n  }, /* @__PURE__ */React5.createElement(\"head\", null, /* @__PURE__ */React5.createElement(\"meta\", {\n    charSet: \"utf-8\"\n  }), /* @__PURE__ */React5.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n  }), /* @__PURE__ */React5.createElement(\"title\", null, title)), /* @__PURE__ */React5.createElement(\"body\", null, /* @__PURE__ */React5.createElement(\"main\", {\n    style: {\n      fontFamily: \"system-ui, sans-serif\",\n      padding: \"2rem\"\n    }\n  }, children, renderScripts ? /* @__PURE__ */React5.createElement(Scripts, null) : null)));\n}\n\n// lib/dom/ssr/fallback.tsx\nvar React6 = __toESM(require(\"react\"));\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */React6.createElement(BoundaryShell, {\n    title: \"Loading...\",\n    renderScripts: true\n  }, /* @__PURE__ */React6.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://remix.run/route/hydrate-fallback \" +\n                \"for more information.\"\n              );\n            `\n    }\n  }));\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach(route => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component4 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */React7.createElement(RemixRootDefaultErrorBoundary, {\n    error: useRouteError()\n  }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...(Component4 ? {\n        element: /* @__PURE__ */React7.createElement(routeModule.Layout, null, /* @__PURE__ */React7.createElement(Component4, null))\n      } : {\n        Component: Component4\n      }),\n      ...(ErrorBoundary ? {\n        errorElement: /* @__PURE__ */React7.createElement(routeModule.Layout, null, /* @__PURE__ */React7.createElement(ErrorBoundary, null))\n      } : {\n        ErrorBoundary\n      }),\n      ...(HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */React7.createElement(routeModule.Layout, null, /* @__PURE__ */React7.createElement(HydrateFallback, null))\n      } : {\n        HydrateFallback\n      })\n    };\n  }\n  return {\n    Component: Component4,\n    ErrorBoundary,\n    HydrateFallback\n  };\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, future, isSpaMode) {\n  return createClientRoutes(manifest, routeModulesCache, initialState, isSpaMode, \"\", groupRoutesByParentId(manifest), needsRevalidation);\n}\nfunction preventInvalidServerHandlerCall(type, route, isSpaMode) {\n  if (isSpaMode) {\n    let fn2 = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg2 = `You cannot call ${fn2} in SPA Mode (routeId: \"${route.id}\")`;\n    console.error(msg2);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg2), true);\n  }\n  let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n  let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map(route => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(typeof singleFetch === \"function\", \"No single fetch function available for route handler\");\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(routeModule, route.id, needsRevalidation)\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n      dataRoute.loader = async ({\n        request,\n        params\n      }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(routeModule, \"No `routeModule` available for critical-route loader\");\n            if (!routeModule.clientLoader) {\n              if (isSpaMode) return null;\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route, isSpaMode);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(route, routeModule, isSpaMode);\n      dataRoute.action = ({\n        request,\n        params\n      }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(routeModule, \"No `routeModule` available for critical-route action\");\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route, isSpaMode);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = ({\n          request\n        }, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) return Promise.resolve(null);\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = ({\n          request\n        }, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      dataRoute.lazy = async () => {\n        let mod = await loadRouteModuleWithBlockingLinks(route, routeModulesCache);\n        let lazyRoute = {\n          ...mod\n        };\n        if (mod.clientLoader) {\n          let clientLoader = mod.clientLoader;\n          lazyRoute.loader = (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route, isSpaMode);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        }\n        if (mod.clientAction) {\n          let clientAction = mod.clientAction;\n          lazyRoute.action = (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route, isSpaMode);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        }\n        return {\n          ...(lazyRoute.loader ? {\n            loader: lazyRoute.loader\n          } : {}),\n          ...(lazyRoute.action ? {\n            action: lazyRoute.action\n          } : {}),\n          hasErrorBoundary: lazyRoute.hasErrorBoundary,\n          shouldRevalidate: getShouldRevalidateFunction(lazyRoute, route.id, needsRevalidation),\n          handle: lazyRoute.handle,\n          // No need to wrap these in layout since the root route is never\n          // loaded via route.lazy()\n          Component: lazyRoute.Component,\n          ErrorBoundary: lazyRoute.ErrorBoundary\n        };\n      };\n    }\n    let children = createClientRoutes(manifest, routeModulesCache, initialState, isSpaMode, route.id, routesByParentId, needsRevalidation);\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(route, routeId, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(routeId, route.shouldRevalidate, needsRevalidation);\n  }\n  if (route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return opts => fn({\n      ...opts,\n      defaultShouldRevalidate: true\n    });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return arg => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModule = await loadRouteModule(route, routeModules);\n  await prefetchStyleLinks(route, routeModule);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(route, routeModule, isSpaMode) {\n  return isSpaMode && route.id !== \"root\" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(isSpaMode) {\n  return !isSpaMode;\n}\nfunction getPartialManifest(manifest, router2) {\n  let routeIds = new Set(router2.state.matches.map(m => m.route.id));\n  let segments = router2.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach(path => {\n    let matches = matchRoutes(router2.routes, path, router2.basename);\n    if (matches) {\n      matches.forEach(m => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce((acc, id) => Object.assign(acc, {\n    [id]: manifest.routes[id]\n  }), {});\n  return {\n    ...manifest,\n    routes: initialRoutes\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(isSpaMode)) {\n    return void 0;\n  }\n  return async ({\n    path,\n    patch\n  }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches([path], manifest, routeModules, isSpaMode, basename, patch);\n  };\n}\nfunction useFogOFWarDiscovery(router2, manifest, routeModules, isSpaMode) {\n  React8.useEffect(() => {\n    if (!isFogOfWarEnabled(isSpaMode) || navigator.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter(path => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(lazyPaths, manifest, routeModules, isSpaMode, router2.basename, router2.patchRoutes);\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [isSpaMode, manifest, routeModules, router2]);\n}\nasync function fetchAndApplyManifestPatches(paths, manifest, routeModules, isSpaMode, basename, patchRoutes) {\n  let manifestPath = `${basename != null ? basename : \"/\"}/__manifest`.replace(/\\/+/g, \"/\");\n  let url = new URL(manifestPath, window.location.origin);\n  paths.sort().forEach(path => url.searchParams.append(\"p\", path));\n  url.searchParams.set(\"version\", manifest.version);\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let res = await fetch(url);\n  if (!res.ok) {\n    throw new Error(`${res.status} ${res.statusText}`);\n  } else if (res.status >= 400) {\n    throw new Error(await res.text());\n  }\n  let serverPatches = await res.json();\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach(p => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */new Set();\n  Object.values(patches).forEach(patch => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(parentId => patchRoutes(parentId || null, createClientRoutes(patches, routeModules, null, isSpaMode, parentId)));\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext() {\n  let context = React9.useContext(DataRouterContext);\n  invariant2(context, \"You must render this element inside a <DataRouterContext.Provider> element\");\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React9.useContext(DataRouterStateContext);\n  invariant2(context, \"You must render this element inside a <DataRouterStateContext.Provider> element\");\n  return context;\n}\nvar FrameworkContext = React9.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React9.useContext(FrameworkContext);\n  invariant2(context, \"You must render this element inside a <HydratedRouter> element\");\n  return context;\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex(m => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nvar isHydrated = false;\nfunction Scripts(props) {\n  let {\n    manifest,\n    serverHandoffString,\n    isSpaMode,\n    renderMeta\n  } = useFrameworkContext();\n  let {\n    router: router2,\n    static: isStatic,\n    staticContext\n  } = useDataRouterContext();\n  let {\n    matches: routerMatches\n  } = useDataRouterStateContext();\n  let enableFogOfWar = isFogOfWarEnabled(isSpaMode);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React9.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let initialScripts = React9.useMemo(() => {\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, index) => `import * as route${index} from ${JSON.stringify(manifest.routes[match.route.id].module)};`).join(\"\\n\")}\n  ${enableFogOfWar ?\n    // Inline a minimal manifest with the SSR matches\n    `window.__reactRouterManifest = ${JSON.stringify(getPartialManifest(manifest, router2), null, 2)};` : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */React9.createElement(React9.Fragment, null, /* @__PURE__ */React9.createElement(\"script\", {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(contextScript),\n      type: void 0\n    }), /* @__PURE__ */React9.createElement(\"script\", {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(routeModulesScript),\n      type: \"module\",\n      async: true\n    }));\n  }, []);\n  let routePreloads = matches.map(match => {\n    let route = manifest.routes[match.route.id];\n    return route ? (route.imports || []).concat([route.module]) : [];\n  }).flat(1);\n  let preloads = isHydrated ? [] : manifest.entry.imports.concat(routePreloads);\n  return isHydrated ? null : /* @__PURE__ */React9.createElement(React9.Fragment, null, !enableFogOfWar ? /* @__PURE__ */React9.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.url,\n    crossOrigin: props.crossOrigin\n  }) : null, /* @__PURE__ */React9.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.entry.module,\n    crossOrigin: props.crossOrigin\n  }), dedupe(preloads).map(path => /* @__PURE__ */React9.createElement(\"link\", {\n    key: path,\n    rel: \"modulepreload\",\n    href: path,\n    crossOrigin: props.crossOrigin\n  })), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\n\n// lib/dom/ssr/errors.ts\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = val.stack;\n            serialized[key] = error;\n          } catch (e) {}\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = val.stack;\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n// lib/dom-export/dom-router-provider.tsx\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */React10.createElement(RouterProvider, {\n    flushSync: ReactDOM.flushSync,\n    ...props\n  });\n}\n\n// lib/dom-export/hydrated-router.tsx\nvar React11 = __toESM(require(\"react\"));\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter() {\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\");\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then(value => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch(e => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(ssrInfo.manifest.routes, ssrInfo.routeModules, ssrInfo.context.state, ssrInfo.context.isSpaMode);\n  let hydrationData = void 0;\n  if (!ssrInfo.context.isSpaMode) {\n    hydrationData = {\n      ...ssrInfo.context.state,\n      loaderData: {\n        ...ssrInfo.context.state.loaderData\n      }\n    };\n    let initialMatches = matchRoutes(routes, window.location, window.__reactRouterContext?.basename);\n    if (initialMatches) {\n      for (let match of initialMatches) {\n        let routeId = match.route.id;\n        let route = ssrInfo.routeModules[routeId];\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\n        if (route && manifestRoute && shouldHydrateRouteLoader(manifestRoute, route, ssrInfo.context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n          delete hydrationData.loaderData[routeId];\n        } else if (manifestRoute && !manifestRoute.hasLoader) {\n          hydrationData.loaderData[routeId] = null;\n        }\n      }\n    }\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    hydrationData,\n    mapRouteProperties,\n    dataStrategy: getSingleFetchDataStrategy(ssrInfo.manifest, ssrInfo.routeModules, () => router2),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.isSpaMode, ssrInfo.context.basename)\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter() {\n  if (!router) {\n    router = createHydratedRouter();\n  }\n  let [criticalCss, setCriticalCss] = React11.useState(process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0);\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n  let [location, setLocation] = React11.useState(router.state.location);\n  React11.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React11.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe(newState => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(router, ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.isSpaMode);\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */\n    React11.createElement(React11.Fragment, null, /* @__PURE__ */React11.createElement(FrameworkContext.Provider, {\n      value: {\n        manifest: ssrInfo.manifest,\n        routeModules: ssrInfo.routeModules,\n        future: ssrInfo.context.future,\n        criticalCss,\n        isSpaMode: ssrInfo.context.isSpaMode\n      }\n    }, /* @__PURE__ */React11.createElement(RemixErrorBoundary, {\n      location\n    }, /* @__PURE__ */React11.createElement(RouterProvider2, {\n      router\n    }))), /* @__PURE__ */React11.createElement(React11.Fragment, null))\n  );\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  HydratedRouter,\n  RouterProvider\n});","map":{"version":3,"names":["__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toESM","mod","isNodeMode","__esModule","value","__toCommonJS","dom_export_exports","HydratedRouter","RouterProvider","RouterProvider2","module","exports","React10","require","ReactDOM","PopStateEventType","createBrowserHistory","options","createBrowserLocation","window2","globalHistory","pathname","search","hash","location","createLocation","state","usr","createBrowserHref","createPath","getUrlBasedHistory","invariant","message","Error","warning","cond","console","warn","e","createKey","Math","random","toString","substring","getHistoryState","index","idx","current","parsePath","charAt","path","parsedPath","hashIndex","indexOf","searchIndex","getLocation","createHref","validateLocation","window","document","defaultView","v5Compat","history","action","listener","getIndex","replaceState","handlePop","nextIndex","delta","push","historyState","url","pushState","error","DOMException","assign","replace2","createURL","base","origin","href","replace","URL","listen","fn","addEventListener","removeEventListener","encodeLocation","go","n","immutableRouteKeys","Set","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties2","parentPath","manifest","map","treePath","String","id","join","children","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","i","length","decoded","decodePath","matchRouteBranch","convertRouteMatchToUiMatch","match","loaderData","params","data","handle","parentsMeta","flattenRoute","relativePath","meta","caseSensitive","childrenIndex","startsWith","slice","joinPaths","routesMeta","concat","score","computeScore","forEach","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","result","subpath","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","siblings","every","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","pathnameBase","normalizePathname","pattern","matcher","compiledParams","compilePath","captureGroups","memo2","paramName","splatValue","regexpSource","_","RegExp","v","decodeURIComponent","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","getInvalidPathError","char","field","dest","JSON","stringify","getPathContributingMatches","getResolveToMatches","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","DataWithResponseInit","constructor","data2","init","type","status","redirect","responseInit","headers","Headers","set","Response","ErrorResponseImpl","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","json","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","TRANSITIONS_STORAGE_KEY","ResetLoaderDataSymbol","Symbol","createRouter","routerWindow","isBrowser","createElement","mapRouteProperties","dataRoutes","inFlightDataRoutes","dataStrategyImpl","dataStrategy","defaultDataStrategy","patchRoutesOnNavigationImpl","patchRoutesOnNavigation","future","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialMatchesIsFOW","initialErrors","getInternalRouterError","getShortCircuitMatches","fogOfWar","checkFogOfWar","active","initialized","m","lazy","loader","errors","findIndex","shouldLoadRouteOnHydration","router2","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","actionData","fetchers","Map","blockers","pendingAction","pendingPreventScrollReset","pendingNavigationController","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","fetchersQueuedForDeletion","blockerFunctions","unblockBlockerHistoryUpdate","pendingRevalidationDfd","initialize","size","blockerKey","shouldBlockNavigation","currentLocation","nextLocation","nextHistoryUpdatePromise","Promise","resolve","updateBlocker","then","updateState","startNavigation","restoreAppliedTransitions","_saveAppliedTransitions","persistAppliedTransitions","initialHydration","dispose","clear","abort","deleteFetcher","deleteBlocker","subscribe","add","delete","newState","opts","unmountedFetchers","mountedFetchers","fetcher","has","subscriber","deletedFetchers","viewTransitionOpts","flushSync","completeNavigation","flushSync2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","k","priorPaths","toPaths","getSavedScrollPosition","navigate","normalizedPath","normalizeTo","fromRouteId","relative","submission","normalizeNavigateOptions","userReplace","pendingError","enableViewTransition","viewTransition","revalidate","createDeferred","interruptActiveLoads","promise","startUninterruptedRevalidation","overrideNavigation","saveScrollPosition","routesToUse","loadingNavigation","isHashChangeOnly","notFoundMatches","handleNavigational404","AbortController","request","createClientSideRequest","signal","pendingActionResult","findNearestBoundary","actionResult","handleAction","shortCircuited","routeId","isErrorResult","getLoadingNavigation","updatedMatches","handleLoaders","fetcherSubmission","getActionDataForCommit","isFogOfWar","getSubmittingNavigation","discoverResult","discoverRoutes","boundaryId","partialMatches","actionMatch","getTargetMatch","method","results","callDataStrategy","aborted","isRedirectResult","location2","normalizeRedirectLocation","response","startRedirectNavigation","boundaryMatch","activeSubmission","getSubmissionFromNavigation","shouldUpdateNavigationState","getUpdatedActionData","matchesToLoad","revalidatingFetchers","getMatchesToLoad","updatedFetchers2","markFetchRedirectsDone","updates","getUpdatedRevalidatingFetchers","rf","abortFetcher","controller","abortPendingFetchRevalidations","f","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","redirect2","findRedirect","processLoaderData","updatedFetchers","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","revalidatingFetcher","getLoadingFetcher","fetch2","setFetcherError","handleFetcherAction","handleFetcherLoader","requestMatches","detectAndHandle405Error","existingFetcher","updateFetcherState","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","actionResults","getDoneFetcher","revalidationRequest","loadId","loadFetcher","staleKey","existingFetcher2","r","doneFetcher","isNavigation","redirectLocation","isDocumentReload","redirectNavigationType","state2","fetcherKey","dataResults","callDataStrategyImpl","entries","isRedirectDataStrategyResult","normalizeRelativeRoutingRedirectResponse","convertDataStrategyResultToDataResult","fetchersToLoad","loaderResultsPromise","fetcherResultsPromise","acc","getFetcher","queueFetcherForDeletion","count","markFetchersDone","doneKeys","landedId","yeetedKeys","getBlocker","blocker","newBlocker","Array","blockerFunction","enableScrollRestoration","positions","getPosition","getKey","y","getScrollKey","fogMatches","isNonHMR","localManifest","patch","patchRoutesImpl","newMatches","newPartialMatches","_internalSetRoutes","newRoutes","patchRoutes","fetch","_internalFetchControllers","isSubmissionNavigation","body","contextualMatches","activeRouteMatch","nakedIndex","hasNakedIndexQuery","URLSearchParams","indexValues","getAll","append","qs","isFetcher","isValidMethod","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","parse","searchParams","convertFormDataToSearchParams","convertSearchParamsToFormData","getLoaderMatchesUntilBoundary","includeBoundary","currentUrl","nextUrl","boundaryMatches","actionStatus","statusCode","shouldSkipRevalidation","navigationMatches","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","hasData","hasError","hydrate","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","childrenToPatch","uniqueChildren","newRoute","existingRoute","isSameRoute","aChild","bChild","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","staticRouteValue","isPropertyStaticallyDefined","shouldLoad","requestContext","loadRouteDefinitionsPromises","dsMatches","loadRoutePromise","handlerOverride","callLoaderOrAction","context","staticContext","onReject","runHandler","handler","reject","abortPromise","actualHandler","ctx","handlerPromise","val","race","handlerError","catch","dataStrategyResult","isResponse","contentType","isDataWithResponseInit","trimmedMatches","normalizedLocation","protocol","isSameBasename","Request","processRouteLoaderData","isStaticHandler","skipLoaderErrorBubbling","foundError","loaderHeaders","newLoaderData","mergedLoaderData","merged","eligibleMatches","reverse","find","errorMessage","_window","transitions","sessionPositions","sessionStorage","getItem","isArray","setItem","res","rej","React3","React","DataRouterContext","createContext","displayName","DataRouterStateContext","ViewTransitionContext","isTransitioning","FetchersContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","React2","ENABLE_DEV_WARNINGS","useInRouterContext","useContext","useLocation","OutletContext","useRoutesImpl","dataRouterState","navigator","navigator2","static","isStatic","parentMatches","routeMatch","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","parsedLocationArg","parentSegments","element","Component","renderedMatches","_renderMatches","Provider","navigationType","DefaultErrorComponent","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","Fragment","style","fontStyle","defaultErrorElement","RenderErrorBoundary","props","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","routeContext","component","RenderedRoute","dataRouterContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","errorIndex","min","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","errors2","needsToRunLoader","reduceRight","shouldRenderHydrateFallback","matches2","getChildren","getDataRouterConsoleError","hookName","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","alreadyWarned","alreadyWarned2","warnOnce","condition","ENABLE_DEV_WARNINGS2","Deferred","reason","router","reactDomFlushSyncImpl","setStateImpl","useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","useRef","setState","useCallback","isViewTransitionAvailable","startViewTransition","startTransition","skipTransition","t","finished","finally","useLayoutEffect","useEffect","renderPromise","transition2","useMemo","Router","MemoizedDataRoutes","memo","DataRoutes","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","React9","invariant2","loadRouteModule","routeModulesCache","routeModule","__reactRouterContext","isSpaMode","reload","prefetchStyleLinks","css","links","isPreloadSupported","descriptors","rel","styleLinks","descriptor","isPageLinkDescriptor","as","matchingLinks","link","media","matchMedia","querySelector","prefetchStyleLink","removeLink","head","contains","removeChild","onload","onerror","appendChild","object","page","_isPreloadSupported","el","relList","supports","createHtml","html","__html","React4","import_turbo_stream","createRequestInit","SingleFetchRedirectSymbol","getSingleFetchDataStrategy","routeModules","getRouter","singleFetchActionStrategy","singleFetchLoaderFetcherStrategy","singleFetchLoaderNavigationStrategy","result2","singleFetchUrl","fetchAndDecode","unwrapSingleFetchResult","routesParams","foundOptOutRoute","routeDfds","createDeferred2","routesLoadedPromise","d","singleFetchDfd","stripIndexParam","resolvePromise","manifestRoute","hasLoader","hasClientLoader","fetchSingleLoader","unwrapSingleFetchResults","__reactRouterHdrActive","singleLoaderUrl","indexValuesToKeep","indexValue","toKeep","reqUrl","NO_BODY_STATUS_CODES","decodeViaTurboStream","global","decode","plugins","Constructor","React8","React7","React5","RemixErrorBoundary","RemixRootDefaultErrorBoundary","isOutsideRemixApp","heyDeveloper","dangerouslySetInnerHTML","BoundaryShell","title","fontSize","errorInstance","errorString","background","color","overflow","renderScripts","useFrameworkContext","root","Layout","lang","charSet","content","fontFamily","Scripts","React6","RemixRootDefaultHydrateFallback","groupRoutesByParentId","values","parentId","getRouteComponents","Component4","getRouteModuleComponent","createClientRoutesWithHMRRevalidationOptOut","needsRevalidation","initialState","createClientRoutes","preventInvalidServerHandlerCall","fn2","msg2","msg","hasAction","noActionDefinedError","article","routesByParentId","fetchServerHandler","singleFetch","fetchServerLoader","fetchServerAction","prefetchStylesAndCallHandler","cachedModule","linkPrefetchPromise","dataRoute","getShouldRevalidateFunction","hasInitialData","initialData","hasInitialError","initialError","isHydrationRequest","clientLoader","serverLoader","shouldHydrateRouteLoader","clientAction","serverAction","hasClientAction","loadRouteModuleWithBlockingLinks","args","wrapShouldRevalidateForHdr","routeShouldRevalidate","handledRevalidation","default","isEmptyObject","nextPaths","discoveredPathsMaxSize","discoveredPaths","URL_LIMIT","isFogOfWarEnabled","getPartialManifest","routeIds","initialRoutes","getPatchRoutesOnNavigationFunction","fetchAndApplyManifestPatches","useFogOFWarDiscovery","connection","saveData","registerElement","tagName","getAttribute","fetchPatches","querySelectorAll","lazyPaths","debouncedFetchPatches","debounce","observer","MutationObserver","observe","documentElement","subtree","childList","attributes","attributeFilter","disconnect","manifestPath","version","ok","serverPatches","knownRoutes","patches","p","addToFifoQueue","parentIds","queue","next","callback","wait","timeoutId","clearTimeout","setTimeout","useDataRouterContext","useDataRouterStateContext","FrameworkContext","getActiveMatches","isHydrated","errorIdx","serverHandoffString","renderMeta","routerMatches","enableFogOfWar","didRenderScripts","initialScripts","streamScript","contextScript","routeModulesScript","hmr","runtime","entry","suppressHydrationWarning","async","routePreloads","imports","flat","preloads","crossOrigin","dedupe","array","deserializeErrors","serialized","__type","__subType","ErrorConstructor","React11","ssrInfo","initSsrInfo","__reactRouterManifest","__reactRouterRouteModules","stateDecodingPromise","routerInitialized","createHydratedRouter","localSsrInfo","stream","createRoutesForHMR","__reactRouterDataRouter","criticalCss","setCriticalCss","process","env","NODE_ENV","__reactRouterClearCriticalCss","setLocation"],"sources":["C:/Users/yeyul/react_assign_01/frontend/node_modules/react-router/dist/development/dom-export.js"],"sourcesContent":["/**\n * react-router v7.1.5\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// dom-export.ts\nvar dom_export_exports = {};\n__export(dom_export_exports, {\n  HydratedRouter: () => HydratedRouter,\n  RouterProvider: () => RouterProvider2\n});\nmodule.exports = __toCommonJS(dom_export_exports);\n\n// lib/dom-export/dom-router-provider.tsx\nvar React10 = __toESM(require(\"react\"));\nvar ReactDOM = __toESM(require(\"react-dom\"));\n\n// lib/router/history.ts\nvar PopStateEventType = \"popstate\";\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let { pathname, search, hash } = window2.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {\n    }\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...typeof to === \"string\" ? parsePath(to) : to,\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options = {}) {\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n  function createURL(to) {\n    let base = window2.location.origin !== \"null\" ? window2.location.origin : window2.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n\n// lib/router/utils.ts\nvar immutableRouteKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\"\n]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\n    );\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties2,\n          treePath,\n          manifest\n        );\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\") {\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\n      );\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(\n    ...restExploded.map(\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\n      a.routesMeta.map((meta) => meta.childrenIndex),\n      b.routesMeta.map((meta) => meta.childrenIndex)\n    )\n  );\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = (s) => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter((s) => !isSplat(s)).reduce(\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\n    initialScore\n  );\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? (\n    // If two routes are siblings, we should try to match the earlier sibling\n    // first. This allows people to have fine-grained control over the matching\n    // behavior by simply putting routes with identical paths in the order they\n    // want them tried.\n    a[a.length - 1] - b[b.length - 1]\n  ) : (\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\n    // so they sort equally.\n    0\n  );\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let { routesMeta } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false\n        },\n        remainingPathname\n      );\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce(\n    (memo2, { paramName, isOptional }, index) => {\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n      }\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo2[paramName] = void 0;\n      } else {\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo2;\n    },\n    {}\n  );\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\n    /\\/:([\\w-]+)(\\?)?/g,\n    (_, paramName, isOptional) => {\n      params.push({ paramName, isOptional: isOptional != null });\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n    }\n  );\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n  }\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\n    );\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\n    path\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter(\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\n  );\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map(\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n  );\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(\n    data2,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, { ...responseInit, headers });\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\n  \"POST\",\n  \"PUT\",\n  \"PATCH\",\n  \"DELETE\"\n];\nvar validMutationMethods = new Set(\n  validMutationMethodsArr\n);\nvar validRequestMethodsArr = [\n  \"GET\",\n  ...validMutationMethodsArr\n];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar defaultMapRouteProperties = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  let future = {\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */ new Set();\n  let savedScrollPositions = null;\n  let getScrollRestorationKey = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    let fogOfWar = checkFogOfWar(\n      null,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active && fogOfWar.matches) {\n      initialMatchesIsFOW = true;\n      initialMatches = fogOfWar.matches;\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    initialized = true;\n  } else {\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors[m.route.id] !== void 0\n      );\n      initialized = initialMatches.slice(0, idx + 1).every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n      );\n    }\n  }\n  let router2;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */ new Map(),\n    blockers: /* @__PURE__ */ new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\n  let fetchControllers = /* @__PURE__ */ new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */ new Map();\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\n  let activeFetchers = /* @__PURE__ */ new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\n  let blockerFunctions = /* @__PURE__ */ new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = void 0;\n          return;\n        }\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\n        );\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction\n        });\n        if (blockerKey && delta != null) {\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey, {\n                state: \"proceeding\",\n                proceed: void 0,\n                reset: void 0,\n                location\n              });\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey, IDLE_BLOCKER);\n              updateState({ blockers });\n            }\n          });\n          return;\n        }\n        return startNavigation(historyAction, location);\n      }\n    );\n    if (isBrowser) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router2;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach((key) => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(\n      (subscriber) => subscriber(state, {\n        deletedFetchers: unmountedFetchers,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true\n      })\n    );\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, { flushSync: flushSync2 } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(\n      state.loaderData,\n      newState.loaderData,\n      newState.matches || [],\n      newState.errors\n    ) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {\n    } else if (pendingAction === \"POP\" /* Pop */) {\n    } else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(\n      {\n        ...newState,\n        // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync2 === true\n      }\n    );\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    pendingRevalidationDfd?.resolve();\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      false,\n      normalizedPath,\n      opts\n    );\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync2 = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({ blockers });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync: flushSync2\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true\n      }\n    );\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n      state.matches\n    ) : matchRoutes(routesToUse, location, basename);\n    let flushSync2 = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, { matches }, { flushSync: flushSync2 });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        },\n        { flushSync: flushSync2 }\n      );\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: \"error\" /* error */, error: opts.pendingError }\n      ];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync: flushSync2 }\n      );\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync2 = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync2,\n      pendingActionResult\n    );\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: \"error\" /* error */,\n              error: discoverResult.error\n            }\n          ]\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: \"error\" /* error */,\n              error\n            }\n          ]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        state,\n        request,\n        [actionMatch],\n        matches,\n        null\n      );\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\"),\n          new URL(request.url),\n          basename\n        );\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync2, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...actionData !== void 0 ? { actionData } : {}\n          },\n          {\n            flushSync: flushSync2\n          }\n        );\n      }\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      initialHydration === true,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\n        },\n        { flushSync: flushSync2 }\n      );\n      return { shortCircuited: true };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync: flushSync2 });\n    }\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      state,\n      matches,\n      matchesToLoad,\n      revalidatingFetchers,\n      request\n    );\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        fetcher ? fetcher.data : void 0\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href, opts) {\n    abortFetcher(key);\n    let flushSync2 = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync: flushSync2 }\n      );\n      return;\n    }\n    let { path, submission, error } = normalizeNavigateOptions(\n      true,\n      normalizedPath,\n      opts\n    );\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync: flushSync2 });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync2,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n    fetchLoadMatches.set(key, { routeId, path });\n    await handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync2,\n      preventScrollReset,\n      submission\n    );\n  }\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync2, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId\n        });\n        setFetcherError(key, routeId, error, { flushSync: flushSync2 });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync: flushSync2\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync: flushSync2 });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync: flushSync2 }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      state,\n      fetchRequest,\n      [match],\n      requestMatches,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        existingFetcher2 ? existingFetcher2.data : void 0\n      );\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({ fetchers: new Map(state.fetchers) });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      state,\n      matches,\n      matchesToLoad,\n      revalidatingFetchers,\n      revalidationRequest\n    );\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      void 0,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync2, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : void 0\n      ),\n      { flushSync: flushSync2 }\n    );\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync: flushSync2 });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync: flushSync2 }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      state,\n      fetchRequest,\n      [match],\n      matches,\n      key\n    );\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(type, state2, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        state2,\n        request,\n        matchesToLoad,\n        matches,\n        fetcherKey,\n        manifest,\n        mapRouteProperties2\n      );\n    } catch (e) {\n      matchesToLoad.forEach((m) => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename\n          )\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state2, matches, matchesToLoad, fetchersToLoad, request) {\n    let loaderResultsPromise = callDataStrategy(\n      \"loader\",\n      state2,\n      request,\n      matchesToLoad,\n      matches,\n      null\n    );\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.controller) {\n          let results = await callDataStrategy(\n            \"loader\",\n            state2,\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            [f.match],\n            f.matches,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: \"error\" /* error */,\n              error: getInternalRouterError(404, {\n                pathname: f.path\n              })\n            }\n          });\n        }\n      })\n    );\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error\n        },\n        fetchers: new Map(state.fetchers)\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n    return { notFoundMatches: matches, route, error };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n    return { active: false, matches: null };\n  }\n  async function discoverRoutes(matches, pathname, signal) {\n    if (!patchRoutesOnNavigationImpl) {\n      return { type: \"success\", matches };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          path: pathname,\n          matches: partialMatches,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties2\n            );\n          }\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n      let newPartialMatches = matchRoutesImpl(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\n        (m, i) => m.route.id === newPartialMatches[i].route.id\n      )) {\n        return { type: \"success\", matches: null };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties2,\n      void 0,\n      manifest\n    );\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties2\n    );\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router2 = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to) => init.history.createHref(to),\n    encodeLocation: (to) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router2;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n        Array.from(opts.body.entries()).reduce(\n          (acc, [name, value]) => `${acc}${name}=${value}\n`,\n          \"\"\n        )\n      ) : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return { path: createPath(parsedPath), submission };\n}\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary = false) {\n  let index = matches.findIndex((m) => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      Object.keys(state.errors)[0],\n      true\n    );\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      pendingActionResult[0]\n    );\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      return true;\n    }\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false : (\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n        currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n      )\n    });\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0) {\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      });\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== void 0;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = (\n    // [a] -> [a, b]\n    !currentMatch || // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id\n  );\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = children.filter(\n    (newRoute) => !childrenToPatch.some(\n      (existingRoute) => isSameRoute(newRoute, existingRoute)\n    )\n  );\n  let newRoutes = convertRoutesToDataRoutes(\n    uniqueChildren,\n    mapRouteProperties2,\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n    manifest\n  );\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every(\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\nasync function loadLazyRouteModule(route, mapRouteProperties2, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  Object.assign(routeToUpdate, routeUpdates);\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided `mapRouteProperties`\n    // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n    // since the logic will differ between frameworks.\n    ...mapRouteProperties2(routeToUpdate),\n    lazy: void 0\n  });\n}\nasync function defaultDataStrategy({\n  matches\n}) {\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  return results.reduce(\n    (acc, result, i) => Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\n    {}\n  );\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(\n    (m) => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties2, manifest) : void 0\n  );\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\n    let resolve = async (handlerOverride) => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(\n        type,\n        request,\n        match,\n        loadRoutePromise,\n        handlerOverride,\n        requestContext\n      ) : Promise.resolve({ type: \"data\" /* data */, result: void 0 });\n    };\n    return {\n      ...match,\n      shouldLoad,\n      resolve\n    };\n  });\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n  }\n  return results;\n}\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = (handler) => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = (ctx) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext\n        },\n        ...ctx !== void 0 ? [ctx] : []\n      );\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (loadRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadRoutePromise\n        ]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return { type: \"data\" /* data */, result: void 0 };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return { type: \"error\" /* error */, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let { result, type } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data2 = null;\n        } else {\n          data2 = await result.json();\n        }\n      } else {\n        data2 = await result.text();\n      }\n    } catch (e) {\n      return { type: \"error\" /* error */, error: e };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(\n          result.init?.status || 500,\n          void 0,\n          result.data\n        ),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return { type: \"data\" /* data */, data: result };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      location\n    );\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = { signal };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = void 0;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult\n  );\n  revalidatingFetchers.forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (controller && controller.signal.aborted) {\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return { loaderData, errors };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route\n      }\n    ],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/components.tsx\nvar React3 = __toESM(require(\"react\"));\n\n// lib/context.ts\nvar React = __toESM(require(\"react\"));\nvar DataRouterContext = React.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar ViewTransitionContext = React.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React.createContext(\n  /* @__PURE__ */ new Map()\n);\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React.createContext(\n  null\n);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React.createContext(\n  null\n);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\n\n// lib/hooks.tsx\nvar React2 = __toESM(require(\"react\"));\nvar ENABLE_DEV_WARNINGS = true;\nfunction useInRouterContext() {\n  return React2.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n  return React2.useContext(LocationContext).location;\n}\nvar OutletContext = React2.createContext(null);\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n  let { navigator: navigator2, static: isStatic } = React2.useContext(NavigationContext);\n  let { matches: parentMatches } = React2.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, { pathname: remainingPathname });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n    warning(\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n  let renderedMatches = _renderMatches(\n    matches && matches.map(\n      (match) => Object.assign({}, match, {\n        params: Object.assign({}, parentParams, match.params),\n        pathname: joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname\n        ]),\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\n        ])\n      })\n    ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */ React2.createElement(\n      LocationContext.Provider,\n      {\n        value: {\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location\n          },\n          navigationType: \"POP\" /* Pop */\n        }\n      },\n      renderedMatches\n    );\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React2.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React2.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\n      RouteErrorContext.Provider,\n      {\n        value: this.state.error,\n        children: this.props.component\n      }\n    )) : this.props.children;\n  }\n};\nfunction RenderedRoute({ routeContext, match, children }) {\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let { loaderData, errors: errors2 } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /* @__PURE__ */ React2.createElement(\n        RenderedRoute,\n        {\n          match,\n          routeContext: {\n            outlet,\n            matches: matches2,\n            isDataRoute: dataRouterState != null\n          },\n          children\n        }\n      );\n    };\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\n      RenderErrorBoundary,\n      {\n        location: dataRouterState.location,\n        revalidation: dataRouterState.revalidation,\n        component: errorElement,\n        error,\n        children: getChildren(),\n        routeContext: { outlet: null, matches: matches2, isDataRoute: true }\n      }\n    ) : getChildren();\n  }, null);\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterState(hookName) {\n  let state = React2.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React2.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\nfunction useRouteError() {\n  let error = React2.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return state.errors?.[routeId];\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/components.tsx\nvar ENABLE_DEV_WARNINGS2 = true;\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React3.createElement(route.Component),\n      Component: void 0\n    });\n  }\n  if (route.HydrateFallback) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.hydrateFallbackElement) {\n        warning(\n          false,\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\n      HydrateFallback: void 0\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React3.createElement(route.ErrorBoundary),\n      ErrorBoundary: void 0\n    });\n  }\n  return updates;\n}\nvar Deferred = class {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n};\nfunction RouterProvider({\n  router: router2,\n  flushSync: reactDomFlushSyncImpl\n}) {\n  let [state, setStateImpl] = React3.useState(router2.state);\n  let [pendingState, setPendingState] = React3.useState();\n  let [vtContext, setVtContext] = React3.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React3.useState();\n  let [transition, setTransition] = React3.useState();\n  let [interruption, setInterruption] = React3.useState();\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\n  let setState = React3.useCallback(\n    (newState, { deletedFetchers, flushSync: flushSync2, viewTransitionOpts }) => {\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== void 0) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      warnOnce(\n        flushSync2 === false || reactDomFlushSyncImpl != null,\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\n      );\n      let isViewTransitionAvailable = router2.window != null && router2.window.document != null && typeof router2.window.document.startViewTransition === \"function\";\n      warnOnce(\n        viewTransitionOpts == null || isViewTransitionAvailable,\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\n      );\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\n        if (reactDomFlushSyncImpl && flushSync2) {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        } else {\n          React3.startTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n      if (reactDomFlushSyncImpl && flushSync2) {\n        reactDomFlushSyncImpl(() => {\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation\n          });\n        });\n        let t = router2.window.document.startViewTransition(() => {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        });\n        t.finished.finally(() => {\n          reactDomFlushSyncImpl(() => {\n            setRenderDfd(void 0);\n            setTransition(void 0);\n            setPendingState(void 0);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n        reactDomFlushSyncImpl(() => setTransition(t));\n        return;\n      }\n      if (transition) {\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      } else {\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }\n    },\n    [router2.window, reactDomFlushSyncImpl, transition, renderDfd]\n  );\n  React3.useLayoutEffect(() => router2.subscribe(setState), [router2, setState]);\n  React3.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && router2.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition2 = router2.window.document.startViewTransition(async () => {\n        React3.startTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition2.finished.finally(() => {\n        setRenderDfd(void 0);\n        setTransition(void 0);\n        setPendingState(void 0);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition2);\n    }\n  }, [pendingState, renderDfd, router2.window]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  React3.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(void 0);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator2 = React3.useMemo(() => {\n    return {\n      createHref: router2.createHref,\n      encodeLocation: router2.encodeLocation,\n      go: (n) => router2.navigate(n),\n      push: (to, state2, opts) => router2.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router2.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router2]);\n  let basename = router2.basename || \"/\";\n  let dataRouterContext = React3.useMemo(\n    () => ({\n      router: router2,\n      navigator: navigator2,\n      static: false,\n      basename\n    }),\n    [router2, navigator2, basename]\n  );\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: navigator2\n    },\n    /* @__PURE__ */ React3.createElement(\n      MemoizedDataRoutes,\n      {\n        routes: router2.routes,\n        future: router2.future,\n        state\n      }\n    )\n  ))))), null);\n}\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\nfunction DataRoutes({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = \"POP\" /* Pop */,\n  navigator: navigator2,\n  static: staticProp = false\n}) {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\n  );\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React3.useMemo(\n    () => ({\n      basename,\n      navigator: navigator2,\n      static: staticProp,\n      future: {}\n    }),\n    [basename, navigator2, staticProp]\n  );\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React3.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\n  );\n  if (locationContext == null) {\n    return null;\n  }\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\n}\n\n// lib/dom/ssr/components.tsx\nvar React9 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import(\n      /* @vite-ignore */\n      /* webpackIgnore: true */\n      route.module\n    );\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(\n      `Error loading route module \\`${route.module}\\`, reloading page...`\n    );\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\n    void 0) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {\n    });\n  }\n}\n\n// lib/dom/ssr/links.ts\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...route.css.map((href) => ({ rel: \"stylesheet\", href })));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  let matchingLinks = styleLinks.filter(\n    (link) => (!link.media || window.matchMedia(link.media).matches) && !document.querySelector(`link[rel=\"stylesheet\"][href=\"${link.href}\"]`)\n  );\n  await Promise.all(matchingLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise((resolve) => {\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/dom/ssr/markup.ts\nfunction createHtml(html) {\n  return { __html: html };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar React4 = __toESM(require(\"react\"));\nvar import_turbo_stream = require(\"turbo-stream\");\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = { signal: request.signal };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nfunction getSingleFetchDataStrategy(manifest, routeModules, getRouter) {\n  return async ({ request, matches, fetcherKey }) => {\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(request, matches);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(request, matches);\n    }\n    return singleFetchLoaderNavigationStrategy(\n      manifest,\n      routeModules,\n      getRouter(),\n      request,\n      matches\n    );\n  };\n}\nasync function singleFetchActionStrategy(request, matches) {\n  let actionMatch = matches.find((m) => m.shouldLoad);\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async (handler) => {\n    let result2 = await handler(async () => {\n      let url = singleFetchUrl(request.url);\n      let init = await createRequestInit(request);\n      let { data: data2, status } = await fetchAndDecode(url, init);\n      actionStatus = status;\n      return unwrapSingleFetchResult(\n        data2,\n        actionMatch.route.id\n      );\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {\n    return { [actionMatch.route.id]: result };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function singleFetchLoaderNavigationStrategy(manifest, routeModules, router2, request, matches) {\n  let routesParams = /* @__PURE__ */ new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = matches.map(() => createDeferred2());\n  let routesLoadedPromise = Promise.all(routeDfds.map((d) => d.promise));\n  let singleFetchDfd = createDeferred2();\n  let url = stripIndexParam(singleFetchUrl(request.url));\n  let init = await createRequestInit(request);\n  let results = {};\n  let resolvePromise = Promise.all(\n    matches.map(\n      async (m, i) => m.resolve(async (handler) => {\n        routeDfds[i].resolve();\n        let manifestRoute = manifest.routes[m.route.id];\n        if (!m.shouldLoad) {\n          if (!router2.state.initialized) {\n            return;\n          }\n          if (m.route.id in router2.state.loaderData && manifestRoute && manifestRoute.hasLoader && routeModules[m.route.id]?.shouldRevalidate) {\n            foundOptOutRoute = true;\n            return;\n          }\n        }\n        if (manifestRoute && manifestRoute.hasClientLoader) {\n          if (manifestRoute.hasLoader) {\n            foundOptOutRoute = true;\n          }\n          try {\n            let result = await fetchSingleLoader(\n              handler,\n              url,\n              init,\n              m.route.id\n            );\n            results[m.route.id] = { type: \"data\", result };\n          } catch (e) {\n            results[m.route.id] = { type: \"error\", result: e };\n          }\n          return;\n        }\n        if (manifestRoute && manifestRoute.hasLoader) {\n          routesParams.add(m.route.id);\n        }\n        try {\n          let result = await handler(async () => {\n            let data2 = await singleFetchDfd.promise;\n            return unwrapSingleFetchResults(data2, m.route.id);\n          });\n          results[m.route.id] = {\n            type: \"data\",\n            result\n          };\n        } catch (e) {\n          results[m.route.id] = {\n            type: \"error\",\n            result: e\n          };\n        }\n      })\n    )\n  );\n  await routesLoadedPromise;\n  if ((!router2.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({});\n  } else {\n    try {\n      if (foundOptOutRoute && routesParams.size > 0) {\n        url.searchParams.set(\n          \"_routes\",\n          matches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\n        );\n      }\n      let data2 = await fetchAndDecode(url, init);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  return results;\n}\nasync function singleFetchLoaderFetcherStrategy(request, matches) {\n  let fetcherMatch = matches.find((m) => m.shouldLoad);\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let result = await fetcherMatch.resolve(async (handler) => {\n    let url = stripIndexParam(singleFetchUrl(request.url));\n    let init = await createRequestInit(request);\n    return fetchSingleLoader(handler, url, init, fetcherMatch.route.id);\n  });\n  return { [fetcherMatch.route.id]: result };\n}\nfunction fetchSingleLoader(handler, url, init, routeId) {\n  return handler(async () => {\n    let singleLoaderUrl = new URL(url);\n    singleLoaderUrl.searchParams.set(\"_routes\", routeId);\n    let { data: data2 } = await fetchAndDecode(singleLoaderUrl, init);\n    return unwrapSingleFetchResults(data2, routeId);\n  });\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl) {\n  let url = typeof reqUrl === \"string\" ? new URL(\n    reqUrl,\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\n    // don't assume window is available\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\n  ) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = \"_root.data\";\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\n  }\n  return url;\n}\nasync function fetchAndDecode(url, init) {\n  let res = await fetch(url, init);\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  const NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205]);\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    if (!init.method || init.method === \"GET\") {\n      return { status: res.status, data: {} };\n    } else {\n      return { status: res.status, data: { data: void 0 } };\n    }\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    return { status: res.status, data: decoded.value };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global) {\n  return (0, import_turbo_stream.decode)(body, {\n    plugins: [\n      (type, ...rest) => {\n        if (type === \"SanitizedError\") {\n          let [name, message, stack] = rest;\n          let Constructor = Error;\n          if (name && name in global && typeof global[name] === \"function\") {\n            Constructor = global[name];\n          }\n          let error = new Constructor(message);\n          error.stack = stack;\n          return { value: error };\n        }\n        if (type === \"ErrorResponse\") {\n          let [data2, status, statusText] = rest;\n          return {\n            value: new ErrorResponseImpl(status, statusText, data2)\n          };\n        }\n        if (type === \"SingleFetchRedirect\") {\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\n        }\n        if (type === \"SingleFetchClassInstance\") {\n          return { value: rest[0] };\n        }\n        if (type === \"SingleFetchFallback\") {\n          return { value: void 0 };\n        }\n      }\n    ]\n  });\n}\nfunction unwrapSingleFetchResults(results, routeId) {\n  let redirect2 = results[SingleFetchRedirectSymbol];\n  if (redirect2) {\n    return unwrapSingleFetchResult(redirect2, routeId);\n  }\n  return results[routeId] !== void 0 ? unwrapSingleFetchResult(results[routeId], routeId) : null;\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"error\" in result) {\n    throw result.error;\n  } else if (\"redirect\" in result) {\n    let headers = {};\n    if (result.revalidate) {\n      headers[\"X-Remix-Revalidate\"] = \"yes\";\n    }\n    if (result.reload) {\n      headers[\"X-Remix-Reload-Document\"] = \"yes\";\n    }\n    if (result.replace) {\n      headers[\"X-Remix-Replace\"] = \"yes\";\n    }\n    throw redirect(result.redirect, { status: result.status, headers });\n  } else if (\"data\" in result) {\n    return result.data;\n  } else {\n    throw new Error(`No response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar React8 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/routes.tsx\nvar React7 = __toESM(require(\"react\"));\n\n// lib/dom/ssr/errorBoundaries.tsx\nvar React5 = __toESM(require(\"react\"));\nvar RemixErrorBoundary = class extends React5.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: props.error || null, location: props.location };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return { error: props.error || null, location: props.location };\n    }\n    return { error: props.error || state.error, location: state.location };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */ React5.createElement(\n        RemixRootDefaultErrorBoundary,\n        {\n          error: this.state.error,\n          isOutsideRemixApp: true\n        }\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */ React5.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\n        );\n      `\n      }\n    }\n  );\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), heyDeveloper);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */ React5.createElement(\n    BoundaryShell,\n    {\n      title: \"Application Error!\",\n      isOutsideRemixApp\n    },\n    /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\n    /* @__PURE__ */ React5.createElement(\n      \"pre\",\n      {\n        style: {\n          padding: \"2rem\",\n          background: \"hsla(10, 50%, 50%, 0.1)\",\n          color: \"red\",\n          overflow: \"auto\"\n        }\n      },\n      errorInstance.stack\n    ),\n    heyDeveloper\n  );\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let { routeModules } = useFrameworkContext();\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */ React5.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React5.createElement(\"head\", null, /* @__PURE__ */ React5.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React5.createElement(\n    \"meta\",\n    {\n      name: \"viewport\",\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n    }\n  ), /* @__PURE__ */ React5.createElement(\"title\", null, title)), /* @__PURE__ */ React5.createElement(\"body\", null, /* @__PURE__ */ React5.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React5.createElement(Scripts, null) : null)));\n}\n\n// lib/dom/ssr/fallback.tsx\nvar React6 = __toESM(require(\"react\"));\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */ React6.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, /* @__PURE__ */ React6.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://remix.run/route/hydrate-fallback \" +\n                \"for more information.\"\n              );\n            `\n      }\n    }\n  ));\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component4 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React7.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...Component4 ? {\n        element: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(Component4, null))\n      } : { Component: Component4 },\n      ...ErrorBoundary ? {\n        errorElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(ErrorBoundary, null))\n      } : { ErrorBoundary },\n      ...HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(HydrateFallback, null))\n      } : { HydrateFallback }\n    };\n  }\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, future, isSpaMode) {\n  return createClientRoutes(\n    manifest,\n    routeModulesCache,\n    initialState,\n    isSpaMode,\n    \"\",\n    groupRoutesByParentId(manifest),\n    needsRevalidation\n  );\n}\nfunction preventInvalidServerHandlerCall(type, route, isSpaMode) {\n  if (isSpaMode) {\n    let fn2 = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg2 = `You cannot call ${fn2} in SPA Mode (routeId: \"${route.id}\")`;\n    console.error(msg2);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg2), true);\n  }\n  let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n  let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(\n        typeof singleFetch === \"function\",\n        \"No single fetch function available for route handler\"\n      );\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(\n          routeModule,\n          route.id,\n          needsRevalidation\n        )\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n      dataRoute.loader = async ({ request, params }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(\n              routeModule,\n              \"No `routeModule` available for critical-route loader\"\n            );\n            if (!routeModule.clientLoader) {\n              if (isSpaMode) return null;\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route, isSpaMode);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\n        route,\n        routeModule,\n        isSpaMode\n      );\n      dataRoute.action = ({ request, params }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(\n            routeModule,\n            \"No `routeModule` available for critical-route action\"\n          );\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route, isSpaMode);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = ({ request }, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) return Promise.resolve(null);\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = ({ request }, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      dataRoute.lazy = async () => {\n        let mod = await loadRouteModuleWithBlockingLinks(\n          route,\n          routeModulesCache\n        );\n        let lazyRoute = { ...mod };\n        if (mod.clientLoader) {\n          let clientLoader = mod.clientLoader;\n          lazyRoute.loader = (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route, isSpaMode);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        }\n        if (mod.clientAction) {\n          let clientAction = mod.clientAction;\n          lazyRoute.action = (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route, isSpaMode);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        }\n        return {\n          ...lazyRoute.loader ? { loader: lazyRoute.loader } : {},\n          ...lazyRoute.action ? { action: lazyRoute.action } : {},\n          hasErrorBoundary: lazyRoute.hasErrorBoundary,\n          shouldRevalidate: getShouldRevalidateFunction(\n            lazyRoute,\n            route.id,\n            needsRevalidation\n          ),\n          handle: lazyRoute.handle,\n          // No need to wrap these in layout since the root route is never\n          // loaded via route.lazy()\n          Component: lazyRoute.Component,\n          ErrorBoundary: lazyRoute.ErrorBoundary\n        };\n      };\n    }\n    let children = createClientRoutes(\n      manifest,\n      routeModulesCache,\n      initialState,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      needsRevalidation\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(route, routeId, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(\n      routeId,\n      route.shouldRevalidate,\n      needsRevalidation\n    );\n  }\n  if (route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return (arg) => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModule = await loadRouteModule(route, routeModules);\n  await prefetchStyleLinks(route, routeModule);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(route, routeModule, isSpaMode) {\n  return isSpaMode && route.id !== \"root\" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */ new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */ new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(isSpaMode) {\n  return !isSpaMode;\n}\nfunction getPartialManifest(manifest, router2) {\n  let routeIds = new Set(router2.state.matches.map((m) => m.route.id));\n  let segments = router2.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach((path) => {\n    let matches = matchRoutes(router2.routes, path, router2.basename);\n    if (matches) {\n      matches.forEach((m) => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce(\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\n    {}\n  );\n  return {\n    ...manifest,\n    routes: initialRoutes\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(isSpaMode)) {\n    return void 0;\n  }\n  return async ({ path, patch }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches(\n      [path],\n      manifest,\n      routeModules,\n      isSpaMode,\n      basename,\n      patch\n    );\n  };\n}\nfunction useFogOFWarDiscovery(router2, manifest, routeModules, isSpaMode) {\n  React8.useEffect(() => {\n    if (!isFogOfWarEnabled(isSpaMode) || navigator.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(\n          lazyPaths,\n          manifest,\n          routeModules,\n          isSpaMode,\n          router2.basename,\n          router2.patchRoutes\n        );\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [isSpaMode, manifest, routeModules, router2]);\n}\nasync function fetchAndApplyManifestPatches(paths, manifest, routeModules, isSpaMode, basename, patchRoutes) {\n  let manifestPath = `${basename != null ? basename : \"/\"}/__manifest`.replace(\n    /\\/+/g,\n    \"/\"\n  );\n  let url = new URL(manifestPath, window.location.origin);\n  paths.sort().forEach((path) => url.searchParams.append(\"p\", path));\n  url.searchParams.set(\"version\", manifest.version);\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let res = await fetch(url);\n  if (!res.ok) {\n    throw new Error(`${res.status} ${res.statusText}`);\n  } else if (res.status >= 400) {\n    throw new Error(await res.text());\n  }\n  let serverPatches = await res.json();\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */ new Set();\n  Object.values(patches).forEach((patch) => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(\n    (parentId) => patchRoutes(\n      parentId || null,\n      createClientRoutes(patches, routeModules, null, isSpaMode, parentId)\n    )\n  );\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext() {\n  let context = React9.useContext(DataRouterContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\n  );\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React9.useContext(DataRouterStateContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\n  );\n  return context;\n}\nvar FrameworkContext = React9.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React9.useContext(FrameworkContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <HydratedRouter> element\"\n  );\n  return context;\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nvar isHydrated = false;\nfunction Scripts(props) {\n  let { manifest, serverHandoffString, isSpaMode, renderMeta } = useFrameworkContext();\n  let { router: router2, static: isStatic, staticContext } = useDataRouterContext();\n  let { matches: routerMatches } = useDataRouterStateContext();\n  let enableFogOfWar = isFogOfWarEnabled(isSpaMode);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React9.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let initialScripts = React9.useMemo(() => {\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map(\n      (match, index) => `import * as route${index} from ${JSON.stringify(\n        manifest.routes[match.route.id].module\n      )};`\n    ).join(\"\\n\")}\n  ${enableFogOfWar ? (\n      // Inline a minimal manifest with the SSR matches\n      `window.__reactRouterManifest = ${JSON.stringify(\n        getPartialManifest(manifest, router2),\n        null,\n        2\n      )};`\n    ) : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */ React9.createElement(React9.Fragment, null, /* @__PURE__ */ React9.createElement(\n      \"script\",\n      {\n        ...props,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(contextScript),\n        type: void 0\n      }\n    ), /* @__PURE__ */ React9.createElement(\n      \"script\",\n      {\n        ...props,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\n        type: \"module\",\n        async: true\n      }\n    ));\n  }, []);\n  let routePreloads = matches.map((match) => {\n    let route = manifest.routes[match.route.id];\n    return route ? (route.imports || []).concat([route.module]) : [];\n  }).flat(1);\n  let preloads = isHydrated ? [] : manifest.entry.imports.concat(routePreloads);\n  return isHydrated ? null : /* @__PURE__ */ React9.createElement(React9.Fragment, null, !enableFogOfWar ? /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.url,\n      crossOrigin: props.crossOrigin\n    }\n  ) : null, /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.entry.module,\n      crossOrigin: props.crossOrigin\n    }\n  ), dedupe(preloads).map((path) => /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      key: path,\n      rel: \"modulepreload\",\n      href: path,\n      crossOrigin: props.crossOrigin\n    }\n  )), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\n\n// lib/dom/ssr/errors.ts\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = val.stack;\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = val.stack;\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n// lib/dom-export/dom-router-provider.tsx\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */ React10.createElement(RouterProvider, { flushSync: ReactDOM.flushSync, ...props });\n}\n\n// lib/dom-export/hydrated-router.tsx\nvar React11 = __toESM(require(\"react\"));\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter() {\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\n      \"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\"\n    );\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then((value) => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch((e) => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(\n    ssrInfo.manifest.routes,\n    ssrInfo.routeModules,\n    ssrInfo.context.state,\n    ssrInfo.context.isSpaMode\n  );\n  let hydrationData = void 0;\n  if (!ssrInfo.context.isSpaMode) {\n    hydrationData = {\n      ...ssrInfo.context.state,\n      loaderData: { ...ssrInfo.context.state.loaderData }\n    };\n    let initialMatches = matchRoutes(\n      routes,\n      window.location,\n      window.__reactRouterContext?.basename\n    );\n    if (initialMatches) {\n      for (let match of initialMatches) {\n        let routeId = match.route.id;\n        let route = ssrInfo.routeModules[routeId];\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\n        if (route && manifestRoute && shouldHydrateRouteLoader(\n          manifestRoute,\n          route,\n          ssrInfo.context.isSpaMode\n        ) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n          delete hydrationData.loaderData[routeId];\n        } else if (manifestRoute && !manifestRoute.hasLoader) {\n          hydrationData.loaderData[routeId] = null;\n        }\n      }\n    }\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    hydrationData,\n    mapRouteProperties,\n    dataStrategy: getSingleFetchDataStrategy(\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      () => router2\n    ),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      ssrInfo.context.isSpaMode,\n      ssrInfo.context.basename\n    )\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter() {\n  if (!router) {\n    router = createHydratedRouter();\n  }\n  let [criticalCss, setCriticalCss] = React11.useState(\n    process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0\n  );\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n  let [location, setLocation] = React11.useState(router.state.location);\n  React11.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React11.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe((newState) => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(\n    router,\n    ssrInfo.manifest,\n    ssrInfo.routeModules,\n    ssrInfo.context.isSpaMode\n  );\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(\n      FrameworkContext.Provider,\n      {\n        value: {\n          manifest: ssrInfo.manifest,\n          routeModules: ssrInfo.routeModules,\n          future: ssrInfo.context.future,\n          criticalCss,\n          isSpaMode: ssrInfo.context.isSpaMode\n        }\n      },\n      /* @__PURE__ */ React11.createElement(RemixErrorBoundary, { location }, /* @__PURE__ */ React11.createElement(RouterProvider2, { router }))\n    ), /* @__PURE__ */ React11.createElement(React11.Fragment, null))\n  );\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  HydratedRouter,\n  RouterProvider\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}